// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "shift+cmd+space",
    "command": "editor.emmet.action.wrapWithAbbreviation"
  },
  {
    "key": "ctrl+n",
    "command": "explorer.newFile"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+/",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+/",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "shift+cmd+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.focus",
    "when": "editorFocus"
  },
  {
    "key": "Ctrl+3",
    "command": "workbench.action.tasks.runTask",
    "args": "rust: cargo run" // tasks.jsonで設定したタスクの名前
  },
  // {
  //   "key": "ctrl+w",
  //   "command": "workbench.action.terminal.sendSequence",
  //   "args": {
  //     "text": "\u0003"
  //   },
  //   "when": "terminalFocus"
  // },
  // {
  //   "key": "ctrl+c",
  //   "command": "workbench.action.terminal.copySelection",
  //   "when": "terminalFocus"
  // },
  {
    "key": "ctrl+v",
    "command": "workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+v",
    "command": "-workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+c",
    "command": "editor.action.clipboardCopyAction",
    "when": "sideBarFocus"
  },
  {
    "key": "cmd+c",
    "command": "-editor.action.clipboardCopyAction"
  },
  {
    "key": "ctrl+v",
    "command": "editor.action.clipboardPasteAction",
    "when": "sideBarFocus"
  },
  {
    "key": "cmd+v",
    "command": "-editor.action.clipboardPasteAction"
  },
  {
    "key": "ctrl+shift+alt+cmd+r",
    "command": "editor.action.insertSnippet",
    "args": {
      "langId": "markdown",
      "name": "rust"
    },
    "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+alt+cmd+l",
    "command": "markdown.extension.editing.toggleList",
    "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+alt+cmd+a",
    "command": "md-shortcut.toggleTitleH1",
    "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+alt+cmd+s",
    "command": "md-shortcut.toggleTitleH2",
    "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+alt+cmd+d",
    "command": "md-shortcut.toggleTitleH3",
    "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+/",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.init && neovim.mode == visual",
    "args": "<C-/>"
  },
  {
    "key": "ctrl+n",
    "command": "-cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+i",
    "command": "editor.action.sourceAction",
    "args": {
      "kind": "source.addMissingImports",
      "apply": "first"
    }
  },
  {
    "key": "ctrl+shift+alt+cmd+p",
    "command": "git.pull"
  },
  {
    "key": "ctrl+shift+alt+cmd+c",
    "command": "git.checkout"
  },
  {
    "key": "ctrl+shift+alt+cmd+g",
    "command": "git-graph.view"
  },
  {
    "key": "shift+cmd+c",
    "command": "prStatus:github.focus"
  },
  {
    "key": "shift+cmd+g",
    "command": "pr:github.focus"
  },
  {
    "key": "ctrl+shift+alt+cmd+i",
    "command": "inlineChat.start",
    "when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
  },
  {
    "key": "cmd+i",
    "command": "-inlineChat.start",
    "when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
  }
]
